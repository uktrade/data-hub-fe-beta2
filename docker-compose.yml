version: '3'
services:
  frontend:
    build:
      context: .
    volumes:
      - ./assets:/usr/src/app/assets
      - ./scripts:/usr/src/app/scripts
      - ./src:/usr/src/app/src
      - ./test:/usr/src/app/test
      - ./visual-screenshots:/usr/src/app/visual-screenshots
    ports:
      - 3000:3000
      - 9229:9229
    depends_on:
      - api
    env_file: dev-stack.env
    command: sh -c './wait-for-it.sh api:8000 -t 240 -- yarn develop'

  api:
    build: ../data-hub-api
    volumes:
      - ../data-hub-api:/app
    env_file: dev-stack.env
    depends_on:
      - celery
    ports:
      - 8000:8000

  celery:
    build: ../data-hub-api
    volumes:
      - ../data-hub-api:/app
    entrypoint: dockerize -wait tcp://postgres:5432 -wait tcp://mi-postgres:5432 -wait tcp://elasticsearch:9200 -wait tcp://redis:6379 -timeout 120s
    env_file: dev-stack.env
    depends_on:
      - elasticsearch
      - postgres
      - mi-postgres
      - redis
    command: watchmedo auto-restart -d . -R -p '*.py' -- celery worker -A config -l info -Q celery -B

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.8.2

  postgres:
    image: postgres:10
    environment:
      - POSTGRES_DB=datahub
      - POSTGRES_PASSWORD=datahub

  mi-postgres:
    image: postgres:9.6
    environment:
      - POSTGRES_DB=mi
      - POSTGRES_PASSWORD=mi

  redis:
    image: redis:3.2.10
