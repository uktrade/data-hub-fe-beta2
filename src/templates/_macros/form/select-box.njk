{##
 # Render select field (form-control)
 # @param {object} props - An object containing field properties
 # @param {string} props.name - Field name
 # @param {string} props.fieldId - Field id
 # @param {string} [props.class] - Field class name
 # @param {object} [props.data] - data attributes to add to control
 # @param {array, function} [props.options] - Field options (either an array of objects or function returning and array of objects)
 # @param {string, array} [props.modifier] - form-control modifier
 # @param {string} [props.error] - Mark form-control with error
 # @param {string} [props.value] - Selected field value
 # @param {string} [props.initialOption] - Initial option label to use for empty value
 # @param {string} [props.persistsConditionalValue] - Whether the values should persist when collapsed
 #}
{% macro SelectBox(props) %}
  {% set options = props.options() if props.options | isFunction else props.options %}
  {% set fieldValue = props.value.id or props.value %}

  <select
    id="{{ props.fieldId }}"
    name="{{ props.name }}"
    class="{{ 'c-form-control' | applyClassModifiers(props.modifier) }} {{ 'has-error' if props.error }} {{ props.class }}"
    {% if props.persistsConditionalValue %}data-persist-values="true"{% endif %}
    {% if props.hint %}aria-describedby="hint-{{ props.fieldId }}"{% endif %}
    {% for key, value in props.data %}
      data-{{ key }}="{{ value | escape }}"
    {% endfor %}
  >
    {% if props.initialOption %}
      <option value="">{{ props.initialOption }}</option>
    {% endif %}
    {% for option in options %}
      {% set label = option.name or option.label %}
      {% set value = option.id or option.value %}
      {% safespaceless %}
        <option value="{{ value }}" {% if value and fieldValue === value %}selected{% endif %}>
          {{ label }}
        </option>
      {% endsafespaceless %}
    {% endfor %}
  </select>
{% endmacro %}
