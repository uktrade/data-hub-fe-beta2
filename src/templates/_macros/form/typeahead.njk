{% from "./text-field.njk" import TextField with context %}
{% from "./multiple-choice-field.njk" import MultipleChoiceField %}

{% macro Typeahead(props) %}
  <div class="c-form-group c-form-group--AddItems">
    <div class="c-typeahead--alternative">
      <noscript>
        {% call MultipleChoiceField(props) %}{% endcall %}
      </noscript>
    </div>
    <div class="js-vue-wrapper" data-typeahead-type="{{ props.name }}">
      <typeahead
        entity="{{ props.entity }}"
        selected-value="{{ props.value }}"
        name="{{ props.name }}"
        {% if props.isOptional %}
          :is-optional="{{ props.isOptional }}"
        {% endif %}
        {% if props.isLabelHidden === true %}
          {% raw %}:{% endraw %}hide-label="{{ props.isLabelHidden }}"
        {% endif %}
        label="{{ props.label }}"
        {% if props.hint %}
          :hint="{{ props.hint | dump }}"
        {% endif %}
        placeholder="{{ props.placeholder }}"
        {% if props.multipleSelect === false %}
          {% raw %}:{% endraw %}multiple-select="{{ props.multipleSelect }}"
        {% endif %}
        model="{{ props.options | dump }}"
        value="{{ props.selectedOptions | dump }}"
        classes="{{ props.classes }}"
        {% if props.isAsync === false %}
          {% raw %}:{% endraw %}is-async="{{ props.isAsync }}"
        {% endif %}
        {% if props.autoSubmit === false %}
          {% raw %}:{% endraw %}auto-submit="{{ props.autoSubmit }}"
        {% endif %}
        {% if props.useSubLabel === false %}
          {% raw %}:{% endraw %}use-sub-label="{{ props.useSubLabel }}"
        {% endif %}
        {% if props.hideInactive === false %}
          {% raw %}:{% endraw %}hide-inactive="{{ props.hideInactive }}"
        {% endif %}
        {% if props.target %}
          target="{{ props.target }}"
        {% endif %}
        {% if props.chainedParams %}
          {% raw %}:{% endraw %}chained-params="{{ props.chainedParams | dump }}"
        {% endif %}
        {% if props.error %}
          {% raw %}:{% endraw %}error="{{ props.error | dump }}"
        {% endif %}
      >
      </typeahead>
    </div>
  </div>
{% endmacro %}
