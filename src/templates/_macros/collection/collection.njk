{% from '../common.njk' import Pagination %}
{% from '../entity.njk' import Entity %}
{% from './collection-header.njk' import CollectionHeader %}

{##
 # Render collection component
 # @param {object}  [props] - component props
 # @param {array{}} [props.id] - collection element id
 # @param {array{}} [props.items] - collection items
 # @param {object}  [props.pagination] - collection pagination
 # @param {object}  [props.selectedFilters] - object containing filters configuration
 # @param {object}  [props.sortForm] - object containing sorting form
 # @param {string, array} [props.listModifier] - entity list modifier
 # @param {string}  [props.highlightTerm] - text to use to apply highlight filter
 # @param {string}  [props.summaryActionsHTML] - HTML content for actions block
 #
 # @param {function} props.caller - Inner contents
#}
{% macro Collection(props) %}
  {% set hasBlockLinks = 'block-links' in [props.listModifier] | flatten %}
  {% set listModifier = props.listModifier | concat('') | reverse | join(' c-entity-list--') if props.listModifier %}

  <article class="c-collection" {% if props.id %}id="{{ props.id }}"{% endif %}>
    {{ CollectionHeader(props | assign({ actionsHTML: props.summaryActionsHTML })) }}

    {% if props.items | length %}
      {% if caller %}
        {{ caller() }}
      {% else %}
        <ol class="c-entity-list {{ listModifier }}">
          {% for item in props.items %}
            <li class="c-entity-list__item">
              {{ Entity(item | assign({ highlightTerm: props.highlightTerm, isBlockLink: hasBlockLinks })) }}
              {% if props.parentCompanyId %}
                <div class="c-entity-list__controls">
                  <a href="/companies/{{ props.parentCompanyId }}/subsidiaries/unlink/{{ item.id }}">Remove link</a>
                </div>
              {% endif %}
            </li>
          {% endfor %}
        </ol>
      {% endif %}
    {% endif %}

    {{ Pagination(props.pagination) }}
  </article>
{% endmacro %}
